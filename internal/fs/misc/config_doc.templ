+++
title = "Config Reference"
toc = true
weight = 40
pre = "<b>4. </b>"
+++

This is a list of all known Configuration settings. This list is based on declared settings within the Choria Go code base and so will not cover 100% of settings - plugins can contribute their own settings which are note known at compile time.

{{% notice secondary "Version Hint" code-branch %}}
Built on *<<.Now>>* using version *<<.Version>>*
{{% /notice %}}

### Run-time configuration

The run-time configuration can be inspected using `choria tool config --config /etc/choria/server.cfg`, this will show the active configuration.

### Search and list directives

In addition to the full list below you can get configuration information for your version using the CLI:

```nohighlight
% choria tool config security.provider
....
Configuration item: plugin.security.provider

║        Value: puppet
║    Data Type: string
║   Validation: enum=puppet,file,pkcs11,certmanager,choria
║      Default: puppet
║
║ The Security Provider to use
╙─
```

### Data Types

A few special types are defined, the rest map to standard Go types

|Type|Description|
|----|-----------|
|comma_split|A comma separated list of strings, possibly with spaces between|
|duration|A duration such as `1h`, `300ms`, `-1.5h` or `2h45m`. Valid time units are `ns`, `ms`, `s`, `m`, `h`|
|path_split|A list of paths split by a OS specific PATH separator|
|path_string|A path that can include `~` for the users home directory|
|strings|A space separated list of strings|
|title_string|A string that will be stored as a `Title String`|

### Index

| | |
|-|-|
<<- range $i, $k := .Keys >>
|[<< index $k 0 >>](#<< index $k 0 | gha >>)|[<< index $k 1 >>](#<< index $k 1 | gha >>)|
<<- end >>

<< range .Docs >>
### << .ConfigKey >>

 * **Type:** << .Type >>
<<- if .URL >>
 * **Additional Information:** << .URL >>
<<- end >>
<<- if .Validation >>
 * **Validation:** << .Validation >>
<<- end >>
<<- if .Default >>
 * **Default Value:** << .Default >>
<<- end >>
<<- if .Environment >>
 * **Environment Variable:** << .Environment >>
<<- end >>
<<- if ne .Description "Undocumented" >>

<< .Description >><< end >>
<<- if .Deprecate >>

**This setting is deprecated or already unused**
<<- end >>
<< end >>
