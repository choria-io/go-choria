{
    "$schema": "http://json-schema.org/draft-04/schema",
    "description": "Choria Request version 1",
    "title": "RequestV1",
    "type":"object",
    "required":[
        "protocol",
        "message",
        "envelope"
    ],
    "properties": {
        "protocol": {
            "type":"string",
            "enum": [
                "choria:request:1"
            ]
        },
        "message": {
            "type":"string",
            "description": "JSON encoded data to be delivered to the Agent",
            "minLength": 1
        },
        "envelope": {
            "type":"object",
            "required":[
                "requestid",
                "senderid",
                "callerid",
                "collective",
                "agent",
                "ttl",
                "time",
                "filter"
            ],
            "properties": {
               "requestid": {
                    "type":"string",
                    "description": "Globally unique Request ID",
                    "minLength": 32,
                    "maxLength": 32
                },
                "senderid": {
                    "type": "string",
                    "description": "The identity of the machine that sent this message"
                },
                "callerid": {
                    "type":"string",
                    "description": "The caller id of the client making this request",
                    "minLength": 1
                },
                "collective": {
                    "type":"string",
                    "description": "The sub collective this message is destined for",
                    "minLength": 1
                },
                "agent": {
                    "type":"string",
                    "description": "The name of the agent on the server that sent this message",
                    "minLength": 1
                },
                "ttl": {
                    "type":"integer",
                    "description": "The number of seconds after creation that this message should be considered valid for",
                    "default": 60,
                    "minimum": 30
                },
                "time": {
                    "type":"integer",
                    "description": "Unix time stamp of UTC time when the reply was made"
                },
                "filter":{
                    "type":"object",
                    "required":[
                        "fact",
                        "cf_class",
                        "identity",
                        "compound"
                    ],
                    "properties": {
                        "compound": {
                            "type":"array",
                            "description": "List of compound filters to be applied in an AND fashion",
                            "items": {
                                "type":"array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        },
                        "identity": {
                            "type":"array",
                            "description": "List of identities the message should match, applied in an OR fashion",
                            "items": {
                                "type":"string"
                            }
                        },
                        "agent": {
                            "type":"array",
                            "description": "List of agents the node should have, applied in an AND fashion",
                            "items": {
                                "type":"string"
                            }
                        },
                        "cf_class": {
                            "type":"array",
                            "description": "The list of configuration management classes the node should have, applied in an AND fashion",
                            "items": {
                                "type":"string"
                            }
                        },
                        "fact": {
                            "type":"array",
                            "description": "Fact values the node should have, applied in an AND fashion",
                            "items": {
                                "type":"object",
                                "required": [
                                    "fact",
                                    "operator",
                                    "value"
                                ],
                                "properties": {
                                    "fact": {
                                        "type":"string",
                                        "description": "The fact name to match",
                                        "minLength": 1
                                    },
                                    "operator": {
                                        "type":"string",
                                        "description": "The comparison to do on it's value",
                                        "enum": [
                                            ">=",
                                            "<=",
                                            "<",
                                            ">",
                                            "!=",
                                            "==",
                                            "=~"
                                        ]
                                    },
                                    "value": {
                                        "type":"string",
                                        "description": "Value to compare the fact value with using the operator",
                                        "minLength": 1
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}