logfile = /var/log/{{cpkg_name}}.log
loglevel = info

# For full configuration details please consult https://choria.io/docs

# The Choria broker can host your middleware, federation brokers and protocol adapters
# all in one binary or even one process.
#
# You can enable all the below features and run just one `choria broker` instance to
# use them all.  For federation and Adapters you can scale horizontally across nodes
# and the network broker supports clustering as below
#
# At least 1 feature has to be enabled else it will exit.


# setting up a 3 node choria broker cluster.
#
# ports:
#   all your clients and nodes connect to 4222
#   the broker cluster is on 5222
#   monitoring is on 8222
#
# required:
#
# plugin.choria.broker_network = true
# plugin.choria.network.peers = nats://choria1:5222, nats://choria2:5222, nats://choria3:5222
#
# optional:
#
# plugin.choria.network.client_port = 4222
# plugin.choria.network.peer_port = 5222
# plugin.choria.network.monitor_port = 8222
# plugin.choria.network.peer_user = choria_cluster
# plugin.choria.network.peer_password = s£cret

plugin.choria.broker_network = false

# setting up a federation broker
#
# for full details see http://choria.io/docs/federation/
#
# plugin.choria.broker_federation = true
# plugin.choria.federation.cluster = development
# plugin.choria.federation.instance = 1 @ dev8.devco.net
# plugin.choria.srv_domain = dev.devco.net

plugin.choria.broker_federation = false

# Setting up a protocol adapter to publish registration messages to NATS Streaming
#
# Here a listener is setup on the collective and received all messages from the
# discovery subsystem and republish them to NATS Streaming.  This creates a log
# like Kafka from where you can consume the stream of data, go back in time,
# etc using your own client code to build whatever integration you want
#
# plugin.choria.adapters = cmdb
#
# here is the Collective side that receives the messages:
#
#   plugin.choria.adapter.cmdb.ingest.topic = mcollective.broadcast.agent.discovery
#   plugin.choria.adapter.cmdb.ingest.protocol = request # or reply
#   plugin.choria.adapter.cmdb.ingest.workers = 10 # default
#
# This is the side that rewrites to the stream, messages are published as
# JSON to a topic my.cmdb, payload has body, sender and time.  Body is
# Base64 encoded
#
#   plugin.choria.adapter.cmdb.type = nats_stream
#   plugin.choria.adapter.cmdb.stream.servers = stan1:4222,stan2:4222
#   plugin.choria.adapter.cmdb.stream.clusterid = prod
#   plugin.choria.adapter.cmdb.stream.topic = my.cmdb
#   plugin.choria.adapter.cmdb.stream.workers = 10 # default
