name: Choria Nightly
on:
  workflow_dispatch: {}
  schedule:
    - cron: "40 4 * * *"

jobs:
  el7_64:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        uses: choria-io/actions/packager@main
        with:
          build_package: el7_64
          packager_tag: el7-go1.19
          version: nightly

  el8_64:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        uses: choria-io/actions/packager@main
        with:
          build_package: el8_64
          packager_tag: el8-go1.19
          version: nightly

  el9_64:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        uses: choria-io/actions/packager@main
        with:
          build_package: el9_64
          packager_tag: el9-go1.19
          version: nightly

  linux_tarball:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        uses: choria-io/actions/packager@main
        with:
          build_package: linux_64_tarball
          packager_tag: el8-go1.19
          version: nightly

  darwin_amd64_tarball:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        uses: choria-io/actions/packager@main
        with:
          build_package: darwin_amd64_tarball
          packager_tag: el8-go1.19
          version: nightly

  darwin_arm64_tarball:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        uses: choria-io/actions/packager@main
        with:
          build_package: darwin_arm64_tarball
          packager_tag: el8-go1.19
          version: nightly

  windows_zip:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        uses: choria-io/actions/packager@main
        with:
          build_package: windows_64_zip
          packager_tag: el8-go1.19
          version: nightly

  docker:
    needs:
      - el8_64

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: src

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - shell: bash
        run: |
          set -e
          
          DATE=$(date +%Y%m%d)
          
          find artifacts -name choria-0.99.0.${DATE}-1.el8.x86_64.rpm | xargs -I {} cp {} src/
          
          cd src          
          docker build \
              --build-arg DATE="${DATE}" \
              --tag "registry.choria.io/choria-nightly/choria:nightly-${DATE}" \
              --tag "registry.choria.io/choria-nightly/choria:nightly" \
              --file Dockerfile-nightly \
              .
          
          docker login registry.choria.io -u "${{ secrets.REGISTRY_USERNAME }}" -p "${{ secrets.REGISTRY_PASSWORD }}"
          
          docker push "registry.choria.io/choria-nightly/choria:nightly-${DATE}"
          docker push "registry.choria.io/choria-nightly/choria:nightly"

  upload:
    needs:
      - el7_64
      - el8_64
      - el9_64
      - linux_tarball
      - windows_zip
      - darwin_amd64_tarball
      - darwin_arm64_tarball

    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Upload artifacts to Spaces
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --endpoint=https://ams3.digitaloceanspaces.com --acl authenticated-read
        env:
          AWS_S3_BUCKET: choria-packages-ams
          AWS_ACCESS_KEY_ID: ${{ secrets.SPACES_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SPACES_SECRET_ACCESS_KEY }}
          SOURCE_DIR: artifacts/foss
          DEST_DIR: nightly
