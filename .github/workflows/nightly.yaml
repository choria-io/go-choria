name: Choria Nightly
on:
  workflow_dispatch: {}
  schedule:
    - cron: "40 0 * * *"

jobs:
  el8_64:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        uses: choria-io/actions/packager@main
        with:
          build_package: el8_64
          packager_tag: el8-go1.24
          version: nightly

  el9_64:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        uses: choria-io/actions/packager@main
        with:
          build_package: el9_64
          packager_tag: el9-go1.24
          version: nightly

  linux_tarball:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        uses: choria-io/actions/packager@main
        with:
          build_package: linux_64_tarball
          packager_tag: el8-go1.24
          version: nightly

  darwin_amd64_tarball:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        uses: choria-io/actions/packager@main
        with:
          build_package: darwin_amd64_tarball
          packager_tag: el8-go1.24
          version: nightly

  darwin_arm64_tarball:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        uses: choria-io/actions/packager@main
        with:
          build_package: darwin_arm64_tarball
          packager_tag: el8-go1.24
          version: nightly

  windows_zip:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        uses: choria-io/actions/packager@main
        with:
          build_package: windows_64_zip
          packager_tag: el8-go1.24
          version: nightly

  docker:
    needs:
      - upload

    runs-on: ubuntu-latest
    steps:
      - name: Build and Publish Docker Container
        uses: choria-io/actions/nightly@main
        with:
          package: choria
          repo: choria
          dockerfile: Dockerfile-nightly
          registry_username: "${{ secrets.REGISTRY_USERNAME }}"
          registry_password: "${{ secrets.REGISTRY_PASSWORD }}"

  upload:
    needs:
      - el8_64
      - el9_64
      - linux_tarball
      - windows_zip
      - darwin_amd64_tarball
      - darwin_arm64_tarball

    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Artifacts normalization
        shell: bash
        run: |
          cd artifacts
          for i in foss*
          do
            mv -v $i $(echo $i|cut -d_ -f2-)
          done

      - name: Upload artifacts to Spaces
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --endpoint=https://ams3.digitaloceanspaces.com --acl authenticated-read
        env:
          AWS_S3_BUCKET: choria-packages-ams
          AWS_ACCESS_KEY_ID: ${{ secrets.SPACES_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SPACES_SECRET_ACCESS_KEY }}
          SOURCE_DIR: artifacts
          DEST_DIR: nightly
