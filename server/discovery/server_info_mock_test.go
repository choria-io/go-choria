// Code generated by MockGen. DO NOT EDIT.
// Source: discovery.go
//
// Generated by this command:
//
//	mockgen -write_generate_directive -package discovery -destination server_info_mock_test.go -source discovery.go
//

// Package discovery is a generated GoMock package.
package discovery

import (
	json "encoding/json"
	reflect "reflect"

	ddl "github.com/choria-io/go-choria/providers/data/ddl"
	gomock "go.uber.org/mock/gomock"
)

//go:generate mockgen -write_generate_directive -package discovery -destination server_info_mock_test.go -source discovery.go

// MockServerInfoSource is a mock of ServerInfoSource interface.
type MockServerInfoSource struct {
	ctrl     *gomock.Controller
	recorder *MockServerInfoSourceMockRecorder
	isgomock struct{}
}

// MockServerInfoSourceMockRecorder is the mock recorder for MockServerInfoSource.
type MockServerInfoSourceMockRecorder struct {
	mock *MockServerInfoSource
}

// NewMockServerInfoSource creates a new mock instance.
func NewMockServerInfoSource(ctrl *gomock.Controller) *MockServerInfoSource {
	mock := &MockServerInfoSource{ctrl: ctrl}
	mock.recorder = &MockServerInfoSourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServerInfoSource) EXPECT() *MockServerInfoSourceMockRecorder {
	return m.recorder
}

// Classes mocks base method.
func (m *MockServerInfoSource) Classes() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Classes")
	ret0, _ := ret[0].([]string)
	return ret0
}

// Classes indicates an expected call of Classes.
func (mr *MockServerInfoSourceMockRecorder) Classes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Classes", reflect.TypeOf((*MockServerInfoSource)(nil).Classes))
}

// DataFuncMap mocks base method.
func (m *MockServerInfoSource) DataFuncMap() (ddl.FuncMap, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DataFuncMap")
	ret0, _ := ret[0].(ddl.FuncMap)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DataFuncMap indicates an expected call of DataFuncMap.
func (mr *MockServerInfoSourceMockRecorder) DataFuncMap() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DataFuncMap", reflect.TypeOf((*MockServerInfoSource)(nil).DataFuncMap))
}

// Facts mocks base method.
func (m *MockServerInfoSource) Facts() json.RawMessage {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Facts")
	ret0, _ := ret[0].(json.RawMessage)
	return ret0
}

// Facts indicates an expected call of Facts.
func (mr *MockServerInfoSourceMockRecorder) Facts() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Facts", reflect.TypeOf((*MockServerInfoSource)(nil).Facts))
}

// Identity mocks base method.
func (m *MockServerInfoSource) Identity() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Identity")
	ret0, _ := ret[0].(string)
	return ret0
}

// Identity indicates an expected call of Identity.
func (mr *MockServerInfoSourceMockRecorder) Identity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Identity", reflect.TypeOf((*MockServerInfoSource)(nil).Identity))
}

// KnownAgents mocks base method.
func (m *MockServerInfoSource) KnownAgents() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "KnownAgents")
	ret0, _ := ret[0].([]string)
	return ret0
}

// KnownAgents indicates an expected call of KnownAgents.
func (mr *MockServerInfoSourceMockRecorder) KnownAgents() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "KnownAgents", reflect.TypeOf((*MockServerInfoSource)(nil).KnownAgents))
}
