<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Choria Server and Broker</title><link>https://choria-io.github.io/go-choria/index.html</link><description>Recent content on Choria Server and Broker</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://choria-io.github.io/go-choria/index.xml" rel="self" type="application/rss+xml"/><item><title>Choria Broker</title><link>https://choria-io.github.io/go-choria/broker/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://choria-io.github.io/go-choria/broker/index.html</guid><description>Choria Broker is a set of features that, in a fully decentralized setup, is the only central component Choria needs. It is highly available, clustered and very high performance. The messaging layer is based on NATS with a number of Choria specific additions.
A single Choria Broker can manage 50,000 devices on a low budget compute instance - though a cluster of at least 3 brokers is recommended for availability reasons.</description></item><item><title>Choria Server</title><link>https://choria-io.github.io/go-choria/server/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://choria-io.github.io/go-choria/server/index.html</guid><description>Choria Server is the component that runs on every managed device. It hosts various plugins that can be accessed remotely via a RPC layer.
It&amp;rsquo;s a stable and robust agent designed to run forever with minimal resource overheads on managed devices.
Features Hosts Choria RPC Agents Hosts Choria Autonomous Agents Hosts foundational technology for Choria Scout Supports optional self-provisioning and enrollment into a Choria network in a IoT device like manner Communicates using a JSON based network protocol with extensive JSON Schemas Deep RBAC integration for Authentication, Authorization and Auditing Supports mTLS or JWT token based security layers with, optional, integration into Enterprise SSO, IAM and systems like Hashicorp Vault Supports Open Policy Agent for Authorization Emits Cloud Events for network management and observability Embeddable in Go applications to provide in-process management for automation backplanes Extensive features related to gathering and streaming of Node Metadata Distributed as RPM, Deb, DMG, MSI across many architectures</description></item><item><title>Installation</title><link>https://choria-io.github.io/go-choria/installation/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://choria-io.github.io/go-choria/installation/index.html</guid><description>We distribute an RPM, Debs, MSIs, Exes and Docker containers for the Choria Server and Broker.
Enterprise Linux We publish RPM releases but also nightly builds to our repositories.
Users of our Puppet modules will already have these repositories available.
Release [choria_release] name=Choria Orchestrator Releases mirrorlist=http://mirrorlists.choria.io/yum/release/el/$releasever/$basearch.txt enabled=True gpgcheck=True repo_gpgcheck=True gpgkey=https://choria.io/RELEASE-GPG-KEY metadata_expire=300 sslcacert=/etc/pki/tls/certs/ca-bundle.crt sslverify=True Nightly Nightly releases are named and versioned choria-0.99.0.20221109-1.el7.x86_64.rpm where the last part of the version is the date.</description></item><item><title>Config Reference</title><link>https://choria-io.github.io/go-choria/configuration/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://choria-io.github.io/go-choria/configuration/index.html</guid><description>This is a list of all known Configuration settings. This list is based on declared settings within the Choria Go code base and so will not cover 100% of settings - plugins can contribute their own settings which are note known at compile time.
Version Hint Built on 22 Mar 23 08:52 UTC using version 0.27.0
Run-time configuration The run-time configuration can be inspected using choria tool config --config /etc/choria/server.</description></item><item><title>Architecture</title><link>https://choria-io.github.io/go-choria/adr/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://choria-io.github.io/go-choria/adr/index.html</guid><description>These are documents describing some Architectural Designs
Document Description ADR-001 Background and design of Protocol version 2 and the Choria Issuer based security layer</description></item><item><title>Custom Packaging</title><link>https://choria-io.github.io/go-choria/packaging/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://choria-io.github.io/go-choria/packaging/index.html</guid><description>Choria binary, being a compiled binary with no external dependencies, needs to be recompiled when adding certain kinds of plugin, changing some default locations or adding your own plugins.
The project provides the tooling to perform these builds and has a compile-time configuration that can be adjusted to local needs.
Requirements The host used to perform the compile need to have Docker on it and be able to fetch the registry.</description></item><item><title>Tech Previews</title><link>https://choria-io.github.io/go-choria/previews/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://choria-io.github.io/go-choria/previews/index.html</guid><description>This section will from time-to-time contain guides on testing upcoming features and architectural changes.</description></item></channel></rss>